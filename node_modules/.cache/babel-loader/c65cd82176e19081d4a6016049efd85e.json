{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = responsiveFontSizes;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _cssUtils = require(\"./cssUtils\");\n\nfunction responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n      breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n      _options$disableAlign = options.disableAlign,\n      disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n      _options$factor = options.factor,\n      factor = _options$factor === void 0 ? 2 : _options$factor,\n      _options$variants = options.variants,\n      variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n  var theme = (0, _extends2.default)({}, themeInput);\n  theme.typography = (0, _extends2.default)({}, theme.typography);\n  var typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n\n  var convert = (0, _cssUtils.convertLength)(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n\n    if (remFontSize <= 1) {\n      return;\n    }\n\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n\n    if (!(0, _cssUtils.isUnitless)(lineHeight) && !disableAlign) {\n      throw new Error([\"Material-UI: unsupported non-unitless line height with grid alignment.\", 'Use unitless line heights instead.'].join('\\n'));\n    }\n\n    if (!(0, _cssUtils.isUnitless)(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n\n    var transform = null;\n\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return (0, _cssUtils.alignProperty)({\n          size: value,\n          grid: (0, _cssUtils.fontGrid)({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n\n    typography[variant] = (0, _extends2.default)({}, style, {}, (0, _cssUtils.responsiveProperty)({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}","map":{"version":3,"sources":["C:/Users/Dno/Desktop/pu-web/node_modules/@material-ui/core/styles/responsiveFontSizes.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","responsiveFontSizes","_extends2","_cssUtils","themeInput","options","arguments","length","undefined","_options$breakpoints","breakpoints","_options$disableAlign","disableAlign","_options$factor","factor","_options$variants","variants","theme","typography","convert","convertLength","htmlFontSize","breakpointValues","map","x","values","forEach","variant","style","remFontSize","parseFloat","fontSize","maxFontSize","minFontSize","lineHeight","isUnitless","Error","join","transform","alignProperty","size","grid","fontGrid","pixels","responsiveProperty","cssProperty","min","max","unit"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = responsiveFontSizes;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _cssUtils = require(\"./cssUtils\");\n\nfunction responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n      breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n      _options$disableAlign = options.disableAlign,\n      disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n      _options$factor = options.factor,\n      factor = _options$factor === void 0 ? 2 : _options$factor,\n      _options$variants = options.variants,\n      variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n  var theme = (0, _extends2.default)({}, themeInput);\n  theme.typography = (0, _extends2.default)({}, theme.typography);\n  var typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n\n  var convert = (0, _cssUtils.convertLength)(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n\n    if (remFontSize <= 1) {\n      return;\n    }\n\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n\n    if (!(0, _cssUtils.isUnitless)(lineHeight) && !disableAlign) {\n      throw new Error([\"Material-UI: unsupported non-unitless line height with grid alignment.\", 'Use unitless line heights instead.'].join('\\n'));\n    }\n\n    if (!(0, _cssUtils.isUnitless)(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n\n    var transform = null;\n\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return (0, _cssUtils.alignProperty)({\n          size: value,\n          grid: (0, _cssUtils.fontGrid)({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n\n    typography[variant] = (0, _extends2.default)({}, style, {}, (0, _cssUtils.responsiveProperty)({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}"]},"metadata":{},"sourceType":"script"}