{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dno\\\\Desktop\\\\pu-web\\\\src\\\\components\\\\buttons\\\\LoginButtonLarge.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport { api_endpoint } from \"../../settings\";\nimport axios from \"axios/index\";\nconst BtnLogin = withStyles({\n  root: {\n    background: \"#FF9B0F\",\n    borderRadius: 50,\n    border: 0,\n    color: \"white\",\n    height: 50,\n    width: 180,\n    padding: \"0 20px\",\n    transition: \"box-shadow 0.2s linear\",\n    margin: \"5px 5px 5px 5px\",\n    \"&:hover\": {\n      boxShadow: \"0 0 2px 5px #FFECD2\",\n      background: \"#FF9B0F\"\n    }\n  },\n  label: {\n    textTransform: \"none\",\n    fontSize: \"16px\",\n    fontWeight: \"700 !important\"\n  }\n})(Button);\nconst singleArrow = {\n  borderLeft: \"2px solid #fff\",\n  borderTop: \"2px solid #fff\",\n  borderRight: \"0\",\n  width: \"5px\",\n  height: \"5px\",\n  transform: \"rotate(135deg)\",\n  margin: \"0 9px\"\n};\nexport default class LoginButtonLarge extends React.Component {\n  constructor(props) {\n    super(props);\n    this.performLogin = this.performLogin.bind(this);\n    this.enterPressed = this.enterPressed.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.enterPressed);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.enterPressed);\n  }\n\n  enterPressed(event) {\n    var code = event.keyCode || event.which;\n\n    if (code === 13) {\n      this.performLogin();\n    }\n  }\n\n  performLogin() {\n    let login = this.props.etLoginRef.current.getValue();\n    let password = this.props.etPasswordRef.current.getValue();\n    let loginData = {\n      login: login,\n      password: password,\n      token: sessionStorage.getItem(\"token\"),\n      key: sessionStorage.getItem(\"key\")\n    };\n    this.props.showProgressBar(true);\n    axios.get(api_endpoint + \"/login\", {\n      params: loginData\n    }).then(response => {\n      this.props.showProgressBar(false);\n      this.props.loginResponseHandler(response.data, login, password);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(BtnLogin, {\n      onClick: this.performLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Log in\", React.createElement(\"div\", {\n      style: singleArrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Dno/Desktop/pu-web/src/components/buttons/LoginButtonLarge.js"],"names":["React","withStyles","Button","api_endpoint","axios","BtnLogin","root","background","borderRadius","border","color","height","width","padding","transition","margin","boxShadow","label","textTransform","fontSize","fontWeight","singleArrow","borderLeft","borderTop","borderRight","transform","LoginButtonLarge","Component","constructor","props","performLogin","bind","enterPressed","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","event","code","keyCode","which","login","etLoginRef","current","getValue","password","etPasswordRef","loginData","token","sessionStorage","getItem","key","showProgressBar","get","params","then","response","loginResponseHandler","data","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { api_endpoint } from \"../../settings\";\r\n\r\nimport axios from \"axios/index\";\r\n\r\nconst BtnLogin = withStyles({\r\n  root: {\r\n    background: \"#FF9B0F\",\r\n    borderRadius: 50,\r\n    border: 0,\r\n    color: \"white\",\r\n    height: 50,\r\n    width: 180,\r\n    padding: \"0 20px\",\r\n    transition: \"box-shadow 0.2s linear\",\r\n    margin: \"5px 5px 5px 5px\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 0 2px 5px #FFECD2\",\r\n      background: \"#FF9B0F\",\r\n    },\r\n  },\r\n  label: {\r\n    textTransform: \"none\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"700 !important\",\r\n  },\r\n})(Button);\r\n\r\nconst singleArrow = {\r\n  borderLeft: \"2px solid #fff\",\r\n  borderTop: \"2px solid #fff\",\r\n  borderRight: \"0\",\r\n  width: \"5px\",\r\n  height: \"5px\",\r\n  transform: \"rotate(135deg)\",\r\n  margin: \"0 9px\",\r\n};\r\n\r\nexport default class LoginButtonLarge extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.performLogin = this.performLogin.bind(this);\r\n    this.enterPressed = this.enterPressed.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.enterPressed);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.enterPressed);\r\n  }\r\n\r\n  enterPressed(event) {\r\n    var code = event.keyCode || event.which;\r\n    if (code === 13) {\r\n      this.performLogin();\r\n    }\r\n  }\r\n\r\n  performLogin() {\r\n    let login = this.props.etLoginRef.current.getValue();\r\n    let password = this.props.etPasswordRef.current.getValue();\r\n    let loginData = {\r\n      login: login,\r\n      password: password,\r\n      token: sessionStorage.getItem(\"token\"),\r\n      key: sessionStorage.getItem(\"key\"),\r\n    };\r\n    this.props.showProgressBar(true);\r\n\r\n    \r\n    axios\r\n      .get(api_endpoint + \"/login\", {\r\n        params: loginData,\r\n      })\r\n      .then((response) => {\r\n        this.props.showProgressBar(false);\r\n        this.props.loginResponseHandler(response.data, login, password);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BtnLogin onClick={this.performLogin}>\r\n          Log in\r\n          <div style={singleArrow} />\r\n        </BtnLogin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}