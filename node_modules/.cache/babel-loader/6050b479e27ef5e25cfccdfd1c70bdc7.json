{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dno\\\\Desktop\\\\pu-web\\\\src\\\\components\\\\pages\\\\login\\\\Login.js\";\nimport React from 'react';\nimport AppBarHome from \"../home/AppBarHome\";\nimport HomeFooter from \"../../pages/home/HomeFooter\";\nimport TFString from \"../../inputs/TFString\";\nimport LoginButtonLarge from \"../../buttons/LoginButtonLarge\";\nimport ForgotPasswordButton from \"../../buttons/ForgotPasswordButton\";\nimport { Redirect } from 'react-router-dom';\nimport PULoading from 'components/common/PULoading';\nimport { containerStyle } from \"../home/styles/PublicStyle\";\nimport Radium from \"radium\";\nconst loginHolder = {\n  marginTop: \"100px\",\n  width: \"320px\"\n};\nconst wrapper = {\n  display: \"flex\",\n  justifyContent: \"center\"\n};\nconst hintStyle = {\n  textAlign: \"left\",\n  fontSize: \"14px\",\n  fontFamily: \"ProximaNova, sans-serif\",\n  fontWeight: \"bold\",\n  marginTop: \"20px\",\n  marginBottom: \"0\",\n  marginLeft: \"30px\",\n  opacity: \"0.6\"\n};\nconst headerStyle = {\n  textAlign: \"center\",\n  fontSize: \"18px\",\n  fontFamily: \"ProximaNova, sans-serif\",\n  fontWeight: \"bold\",\n  marginTop: \"0px\",\n  marginBottom: \"50px\",\n  opacity: \"0.7\"\n};\nconst spacer = {\n  height: \"40px\",\n  width: \"100%\"\n};\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRedirect = () => {\n      this.setState({\n        login_redirect: true\n      });\n    };\n\n    let intViewportHeight = window.innerHeight - 332;\n    let intLoadingBackgroundHeight = window.innerHeight;\n    let intLoadingBackgroundWidth = window.innerWidth;\n    this.state = {\n      divHeight: intViewportHeight,\n      loadingBackgroundHeight: intLoadingBackgroundHeight,\n      loadingBackgroundWidth: intLoadingBackgroundWidth,\n      sms_code_check_redirect: false,\n      dashboard_redirect: false,\n      login_redirect: false,\n      register_redirect: false,\n      progressBarVisible: false\n    };\n    this.tf_login = React.createRef();\n    this.tf_password = React.createRef();\n    this.handleLoginResponse = this.handleLoginResponse.bind(this);\n    this.handleRegisterRedirect = this.handleRegisterRedirect.bind(this);\n    this.showProgressBar = this.showProgressBar.bind(this);\n  }\n\n  showProgressBar(barVisible) {\n    this.setState({\n      progressBarVisible: barVisible\n    });\n  }\n\n  generateLoginHolderStyle() {\n    return {\n      minHeight: this.state.divHeight\n    };\n  }\n\n  handleRegisterRedirect() {\n    this.setState({\n      register_redirect: true\n    });\n  }\n\n  handleLoginResponse(resp, login, password) {\n    if (resp.status === 'OK' && resp.response.two_factor_auth === true) {\n      sessionStorage.setItem('user_id', resp.response.user_id);\n      sessionStorage.setItem('token', resp.response.token);\n      sessionStorage.setItem('key', resp.response.key);\n      sessionStorage.setItem('id_sms_code', resp.response.id_sms_code);\n      this.setState({\n        sms_code_check_redirect: true\n      });\n    } else if (resp.status === 'OK' && (resp.response.two_factor_auth === false || resp.response.two_factor_auth === null)) {\n      sessionStorage.setItem('user_id', resp.response.user_id);\n      sessionStorage.setItem('token', resp.response.token);\n      sessionStorage.setItem('key', resp.response.key);\n      sessionStorage.setItem('phone_number', resp.response.phone_number);\n      this.setState({\n        dashboard_redirect: true\n      });\n    } else {\n      if (resp.status === 'FAIL') {\n        for (const error of resp.errors) {\n          this.tf_login.current.setValue(login);\n          this.tf_password.current.setValue(password);\n\n          switch (error.code) {\n            case 1:\n              {\n                this.tf_login.current.setError(error.message);\n                break;\n              }\n\n            case 2:\n              {\n                this.tf_password.current.setError(error.message);\n                break;\n              }\n\n            case 3:\n              {\n                this.tf_login.current.setError(error.message);\n                this.tf_password.current.setError('');\n                break;\n              }\n\n            default:\n              {\n                break;\n              }\n          }\n        }\n\n        this.setState({\n          sms_code_check_redirect: false\n        });\n        this.setState({\n          dashboard_redirect: false\n        });\n      } else {\n        alert('Server error!');\n        this.setState({\n          sms_code_check_redirect: false\n        });\n        this.setState({\n          dashboard_redirect: false\n        });\n      }\n    }\n  }\n\n  render() {\n    if (this.state.progressBarVisible) {\n      return React.createElement(PULoading, {\n        size: 100,\n        thickness: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      });\n    }\n\n    if (!this.state.sms_code_check_redirect && !this.state.dashboard_redirect && !this.state.register_redirect) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(AppBarHome, {\n        loginRedirectHandler: this.handleLoginRedirect,\n        registerRedirectHandler: this.handleRegisterRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: this.generateLoginHolderStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        styel: containerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: loginHolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: headerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Sign in to PAYSUNION\"), React.createElement(\"p\", {\n        style: hintStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Input phone or email\"), React.createElement(TFString, {\n        tf_required: true // tf_variant=\"outlined\"\n        ,\n        tf_margin: \"normal\",\n        tf_default_value: \"\",\n        tf_enabled: \"true\",\n        ref: this.tf_login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: hintStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Input password\"), React.createElement(TFString, {\n        tf_required: true // tf_variant=\"outlined\"\n        ,\n        tf_margin: \"normal\",\n        tf_type: \"password\",\n        tf_default_value: \"\",\n        tf_enabled: \"true\",\n        ref: this.tf_password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: spacer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(LoginButtonLarge, {\n        etLoginRef: this.tf_login,\n        etPasswordRef: this.tf_password,\n        loginResponseHandler: this.handleLoginResponse,\n        showProgressBar: this.showProgressBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(ForgotPasswordButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })))))), React.createElement(HomeFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }));\n    } else if (this.state.sms_code_check_redirect && !this.state.dashboard_redirect) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: \"/login_enter_sms_code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      });\n    } else if (this.state.dashboard_redirect && !this.state.sms_code_check_redirect) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      });\n    } else if (this.state.register_redirect) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: \"/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Radium(Login);","map":{"version":3,"sources":["C:/Users/Dno/Desktop/pu-web/src/components/pages/login/Login.js"],"names":["React","AppBarHome","HomeFooter","TFString","LoginButtonLarge","ForgotPasswordButton","Redirect","PULoading","containerStyle","Radium","loginHolder","marginTop","width","wrapper","display","justifyContent","hintStyle","textAlign","fontSize","fontFamily","fontWeight","marginBottom","marginLeft","opacity","headerStyle","spacer","height","Login","Component","constructor","props","handleLoginRedirect","setState","login_redirect","intViewportHeight","window","innerHeight","intLoadingBackgroundHeight","intLoadingBackgroundWidth","innerWidth","state","divHeight","loadingBackgroundHeight","loadingBackgroundWidth","sms_code_check_redirect","dashboard_redirect","register_redirect","progressBarVisible","tf_login","createRef","tf_password","handleLoginResponse","bind","handleRegisterRedirect","showProgressBar","barVisible","generateLoginHolderStyle","minHeight","resp","login","password","status","response","two_factor_auth","sessionStorage","setItem","user_id","token","key","id_sms_code","phone_number","error","errors","current","setValue","code","setError","message","alert","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AppBarHome from \"../home/AppBarHome\";\r\nimport HomeFooter from \"../../pages/home/HomeFooter\";\r\nimport TFString from \"../../inputs/TFString\";\r\nimport LoginButtonLarge from \"../../buttons/LoginButtonLarge\";\r\nimport ForgotPasswordButton from \"../../buttons/ForgotPasswordButton\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport PULoading from 'components/common/PULoading';\r\nimport {containerStyle} from \"../home/styles/PublicStyle\";\r\nimport Radium from \"radium\";\r\n\r\nconst loginHolder = {\r\n    marginTop: \"100px\",\r\n    width: \"320px\",\r\n};\r\n\r\n\r\nconst wrapper = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n};\r\n\r\nconst hintStyle = {\r\n    textAlign: \"left\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"ProximaNova, sans-serif\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"20px\",\r\n    marginBottom: \"0\",\r\n    marginLeft: \"30px\",\r\n    opacity: \"0.6\"\r\n};\r\n\r\nconst headerStyle = {\r\n    textAlign: \"center\",\r\n    fontSize: \"18px\",\r\n    fontFamily: \"ProximaNova, sans-serif\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"0px\",\r\n    marginBottom: \"50px\",\r\n    opacity: \"0.7\"\r\n};\r\n\r\nconst spacer = {\r\n    height: \"40px\",\r\n    width: \"100%\"\r\n};\r\n\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let intViewportHeight = window.innerHeight - 332;\r\n        let intLoadingBackgroundHeight = window.innerHeight;\r\n        let intLoadingBackgroundWidth = window.innerWidth;\r\n        this.state = {\r\n            divHeight: intViewportHeight,\r\n            loadingBackgroundHeight: intLoadingBackgroundHeight,\r\n            loadingBackgroundWidth: intLoadingBackgroundWidth,\r\n            sms_code_check_redirect: false,\r\n            dashboard_redirect: false,\r\n            login_redirect: false,\r\n            register_redirect: false,\r\n            progressBarVisible: false\r\n        };\r\n        this.tf_login = React.createRef();\r\n        this.tf_password = React.createRef();\r\n        this.handleLoginResponse = this.handleLoginResponse.bind(this);\r\n\r\n        this.handleRegisterRedirect = this.handleRegisterRedirect.bind(this);\r\n        this.showProgressBar = this.showProgressBar.bind(this);\r\n    }\r\n    showProgressBar(barVisible) {\r\n        this.setState({ progressBarVisible: barVisible });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    generateLoginHolderStyle() {\r\n        return {\r\n            minHeight: this.state.divHeight,\r\n        }\r\n    }\r\n\r\n    handleLoginRedirect = () => {\r\n        this.setState({ login_redirect: true });\r\n    };\r\n\r\n    handleRegisterRedirect() {\r\n        this.setState({ register_redirect: true });\r\n    };\r\n\r\n    handleLoginResponse(resp, login, password) {\r\n\r\n        if (resp.status === 'OK' && resp.response.two_factor_auth === true) {\r\n            sessionStorage.setItem('user_id', resp.response.user_id);\r\n            sessionStorage.setItem('token', resp.response.token);\r\n            sessionStorage.setItem('key', resp.response.key);\r\n            sessionStorage.setItem('id_sms_code', resp.response.id_sms_code);\r\n            this.setState({ sms_code_check_redirect: true });\r\n        }\r\n        else if (resp.status === 'OK' && (resp.response.two_factor_auth === false || resp.response.two_factor_auth === null)) {\r\n            sessionStorage.setItem('user_id', resp.response.user_id);\r\n            sessionStorage.setItem('token', resp.response.token);\r\n            sessionStorage.setItem('key', resp.response.key);\r\n            sessionStorage.setItem('phone_number', resp.response.phone_number);\r\n            this.setState({ dashboard_redirect: true })\r\n        }\r\n        else {\r\n            if (resp.status === 'FAIL') {\r\n                for (const error of resp.errors) {\r\n                    this.tf_login.current.setValue(login);\r\n                    this.tf_password.current.setValue(password);\r\n\r\n                    switch (error.code) {\r\n                        case 1: {\r\n                            this.tf_login.current.setError(error.message);\r\n                            break;\r\n                        }\r\n                        case 2: {\r\n                            this.tf_password.current.setError(error.message);\r\n                            break;\r\n                        }\r\n                        case 3: {\r\n                            this.tf_login.current.setError(error.message);\r\n                            this.tf_password.current.setError('');\r\n                            break;\r\n                        }\r\n                        default: {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                this.setState({ sms_code_check_redirect: false });\r\n                this.setState({ dashboard_redirect: false });\r\n            }\r\n            else {\r\n                alert('Server error!');\r\n                this.setState({ sms_code_check_redirect: false });\r\n                this.setState({ dashboard_redirect: false });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.progressBarVisible) {\r\n            return <PULoading size={100} thickness={3} />\r\n        }\r\n        if (\r\n            !this.state.sms_code_check_redirect &&\r\n            !this.state.dashboard_redirect &&\r\n            !this.state.register_redirect\r\n        ) {\r\n            return (\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        <AppBarHome\r\n                            loginRedirectHandler={this.handleLoginRedirect}\r\n                            registerRedirectHandler={this.handleRegisterRedirect}\r\n                        />\r\n                    </header>\r\n                    <div style={this.generateLoginHolderStyle()}>\r\n                        <div styel={containerStyle}>\r\n                        <div style={wrapper}>\r\n                            <div style={loginHolder}>\r\n                                {/*<input*/}\r\n\r\n                                {/*>*/}\r\n                                <p style={headerStyle}>Sign in to PAYSUNION</p>\r\n                                <p style={hintStyle}>Input phone or email</p>\r\n                                <TFString\r\n                                    tf_required={true}\r\n                                    // tf_variant=\"outlined\"\r\n                                    tf_margin=\"normal\"\r\n                                    tf_default_value=\"\"\r\n                                    tf_enabled=\"true\"\r\n                                    ref={this.tf_login}\r\n                                />\r\n                                <p style={hintStyle}>Input password</p>\r\n                                <TFString\r\n                                    tf_required={true}\r\n                                    // tf_variant=\"outlined\"\r\n                                    tf_margin=\"normal\"\r\n                                    tf_type=\"password\"\r\n                                    tf_default_value=\"\"\r\n                                    tf_enabled=\"true\"\r\n                                    ref={this.tf_password}\r\n                                />\r\n                                <div style={spacer} />\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <LoginButtonLarge\r\n                                        etLoginRef={this.tf_login}\r\n                                        etPasswordRef={this.tf_password}\r\n                                        loginResponseHandler={this.handleLoginResponse}\r\n                                        showProgressBar={this.showProgressBar}\r\n                                    />\r\n                                    <ForgotPasswordButton />\r\n                                </div>\r\n                                {/*</input>*/}\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <HomeFooter />\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.state.sms_code_check_redirect && !this.state.dashboard_redirect) {\r\n            return <Redirect push to=\"/login_enter_sms_code\" />;\r\n        }\r\n        else if (this.state.dashboard_redirect && !this.state.sms_code_check_redirect) {\r\n            return <Redirect push to=\"/dashboard\" />;\r\n        }\r\n        else if (this.state.register_redirect) {\r\n            return <Redirect push to=\"/register\" />;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Radium(Login);"]},"metadata":{},"sourceType":"module"}