{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dno\\\\Desktop\\\\pu-web\\\\src\\\\components\\\\pages\\\\home\\\\AppBarHome.js\";\nimport React from \"react\";\nimport LoginButton from \"../../buttons/LoginButton\";\nimport SignupButton from \"../../buttons/SignupButton\";\nimport { AppBar, Toolbar } from \"@material-ui/core\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport PULogo from \"components/images/logo.png\";\nimport { ReactComponent as CBArrowDropDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../images/combobox-arrow.svg\";\nimport ProductsButton from \"../../buttons/ProductsButton\";\nimport PricingButton from \"../../buttons/PricingButton\";\nimport CompanyButton from \"../../buttons/CompanyButton\";\nimport HelpButton from \"../../buttons/HelpButton\";\nimport PUSelect from \"../../selects/PUSelect\";\nimport { Redirect } from \"react-router-dom\";\nimport { withTranslation } from \"react-i18next\";\nimport { getLocale } from \"localization\";\nconst LANGUAGES = [{\n  id: 1,\n  label: \"ENG\"\n}, {\n  id: 2,\n  label: \"RUS\"\n}];\nconst i18Lang = {\n  1: 'en',\n  2: 'ru'\n};\n\nfunction ElevationScroll(props) {\n  const {\n    children\n  } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n  return React.cloneElement(children, {\n    elevation: trigger ? 7 : 0\n  });\n}\n\nclass AppBarHome extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRedirect = () => {\n      this.props.loginRedirectHandler && this.props.loginRedirectHandler();\n    };\n\n    this.handleRegisterRedirect = () => {\n      this.props.registerRedirectHandler && this.props.registerRedirectHandler();\n    };\n\n    this.generateStyle = color_ => {\n      return {\n        borderRadius: \"0 0 10px 10px\",\n        alignItems: \"center\",\n        background: color_\n      };\n    };\n\n    this.homeRedirectHandler = () => {\n      this.setState({\n        home_redirect: true\n      });\n    };\n\n    this.getLang = () => {\n      let lang = getLocale();\n      return lang === 'ru' ? 2 : 1;\n    };\n\n    this.changeLanguage = languageID_ => {\n      this.setState({\n        languageID: i18Lang[languageID_]\n      }); //alert(\"LanguageID set to: \" + languageID_);\n\n      this.props.i18n.changeLanguage(i18Lang[languageID_]);\n    };\n\n    this.state = {\n      isTop: true,\n      navBarColor: \"transparent\",\n      home_redirect: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"scroll\", () => {\n      const isTop = window.scrollY < 1;\n\n      if (isTop !== this.state.isTop) {\n        this.setState({\n          isTop\n        });\n\n        if (isTop) {\n          this.setState({\n            navBarColor: \"transparent\"\n          });\n        } else {\n          this.setState({\n            navBarColor: \"white\"\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    if (!this.state.home_redirect) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(ElevationScroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        style: this.generateStyle(this.state.navBarColor),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: PULogo // className=\"App-logo\"\n        ,\n        alt: \"logo\",\n        onClick: this.homeRedirectHandler,\n        style: {\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"nav__right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(ProductsButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(PricingButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(CompanyButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(HelpButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(SignupButton, {\n        registerRedirectHandler: this.handleRegisterRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(LoginButton, {\n        loginRedirectHandler: this.handleLoginRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(PUSelect, {\n        change_handler: this.changeLanguage,\n        combobox_label: \"\",\n        cb_min_width: \"80px\",\n        select_options: LANGUAGES,\n        selectedValue: this.getLang(),\n        cb_enabled: true,\n        IconComponent: CBArrowDropDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))))), React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(ElevationScroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        style: this.generateStyle(this.state.navBarColor),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: PULogo // className=\"App-logo\"\n        ,\n        alt: \"logo\",\n        onClick: this.homeRedirectHandler,\n        style: {\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(ProductsButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(PricingButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(CompanyButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(HelpButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(SignupButton, {\n        registerRedirectHandler: this.handleRegisterRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(LoginButton, {\n        loginRedirectHandler: this.handleLoginRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(PUSelect, {\n        change_handler: this.changeLanguage,\n        combobox_label: \"\",\n        cb_min_width: \"80px\",\n        select_options: [{\n          id: 1,\n          label: \"ENG\"\n        }, {\n          id: 2,\n          label: \"RUS\"\n        }],\n        cb_enabled: true,\n        IconComponent: CBArrowDropDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })))), React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        push: true,\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default withTranslation()(AppBarHome);","map":{"version":3,"sources":["C:/Users/Dno/Desktop/pu-web/src/components/pages/home/AppBarHome.js"],"names":["React","LoginButton","SignupButton","AppBar","Toolbar","useScrollTrigger","PULogo","ProductsButton","PricingButton","CompanyButton","HelpButton","PUSelect","Redirect","withTranslation","getLocale","LANGUAGES","id","label","i18Lang","ElevationScroll","props","children","trigger","disableHysteresis","threshold","cloneElement","elevation","AppBarHome","Component","constructor","handleLoginRedirect","loginRedirectHandler","handleRegisterRedirect","registerRedirectHandler","generateStyle","color_","borderRadius","alignItems","background","homeRedirectHandler","setState","home_redirect","getLang","lang","changeLanguage","languageID_","languageID","i18n","state","isTop","navBarColor","componentDidMount","document","addEventListener","window","scrollY","render","cursor","CBArrowDropDown"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport LoginButton from \"../../buttons/LoginButton\";\r\nimport SignupButton from \"../../buttons/SignupButton\";\r\nimport { AppBar, Toolbar } from \"@material-ui/core\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\n\r\nimport PULogo from \"components/images/logo.png\";\r\n\r\n\r\nimport { ReactComponent as CBArrowDropDown } from \"../../images/combobox-arrow.svg\";\r\nimport ProductsButton from \"../../buttons/ProductsButton\";\r\nimport PricingButton from \"../../buttons/PricingButton\";\r\nimport CompanyButton from \"../../buttons/CompanyButton\";\r\nimport HelpButton from \"../../buttons/HelpButton\";\r\nimport PUSelect from \"../../selects/PUSelect\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { getLocale } from \"localization\";\r\n\r\n\r\nconst LANGUAGES = [\r\n  { id: 1, label: \"ENG\" },\r\n  { id: 2, label: \"RUS\" },\r\n];\r\n\r\nconst i18Lang = {1: 'en', 2: 'ru'};\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 7 : 0,\r\n  });\r\n}\r\n\r\n\r\n\r\nclass AppBarHome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isTop: true,\r\n      navBarColor: \"transparent\",\r\n      home_redirect: false,\r\n    };\r\n  }\r\n\r\n  handleLoginRedirect = () => {\r\n    this.props.loginRedirectHandler && this.props.loginRedirectHandler();\r\n  }\r\n\r\n  handleRegisterRedirect = () => {\r\n    this.props.registerRedirectHandler && this.props.registerRedirectHandler();\r\n  }\r\n\r\n  generateStyle = (color_) => {\r\n    return {\r\n      borderRadius: \"0 0 10px 10px\",\r\n      alignItems: \"center\",\r\n      background: color_,\r\n    };\r\n  }\r\n\r\n  homeRedirectHandler = () => {\r\n    this.setState({ home_redirect: true });\r\n  }\r\n\r\n  getLang = () => {\r\n    let lang = getLocale();\r\n    return lang === 'ru' ? 2 : 1;\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"scroll\", () => {\r\n      const isTop = window.scrollY < 1;\r\n      if (isTop !== this.state.isTop) {\r\n        this.setState({ isTop });\r\n        if (isTop) {\r\n          this.setState({ navBarColor: \"transparent\" });\r\n        } else {\r\n          this.setState({ navBarColor: \"white\" });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  changeLanguage = (languageID_) => {\r\n    this.setState({ languageID: i18Lang[languageID_] });\r\n    //alert(\"LanguageID set to: \" + languageID_);\r\n\r\n    this.props.i18n.changeLanguage(i18Lang[languageID_]);\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.state.home_redirect) {\r\n      return (\r\n        <div className=\"App\">\r\n          <ElevationScroll>\r\n            <AppBar style={this.generateStyle(this.state.navBarColor)}>\r\n              <Toolbar className={\"nav\"}>\r\n                <img\r\n                  src={PULogo}\r\n                  // className=\"App-logo\"\r\n                  alt=\"logo\"\r\n                  onClick={this.homeRedirectHandler}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <div className={\"nav__right\"}>\r\n                  <ProductsButton />\r\n                  <PricingButton />\r\n                  <CompanyButton />\r\n                  <HelpButton />\r\n                  <SignupButton\r\n                    registerRedirectHandler={this.handleRegisterRedirect}\r\n                  />\r\n                  <LoginButton loginRedirectHandler={this.handleLoginRedirect} />\r\n                  <PUSelect\r\n                    change_handler={this.changeLanguage}\r\n                    combobox_label=\"\"\r\n                    cb_min_width=\"80px\"\r\n                    select_options={LANGUAGES}\r\n                    selectedValue={this.getLang()}\r\n                    cb_enabled={true}\r\n                    IconComponent={CBArrowDropDown}\r\n                  />\r\n                </div>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </ElevationScroll>\r\n          <Toolbar />\r\n          <Toolbar />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\">\r\n          <ElevationScroll>\r\n            <AppBar style={this.generateStyle(this.state.navBarColor)}>\r\n              <Toolbar className={\"nav\"}>\r\n                <img\r\n                  src={PULogo}\r\n                  // className=\"App-logo\"\r\n                  alt=\"logo\"\r\n                  onClick={this.homeRedirectHandler}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n\r\n                <ProductsButton />\r\n                <PricingButton />\r\n                <CompanyButton />\r\n                <HelpButton />\r\n                <SignupButton\r\n                  registerRedirectHandler={this.handleRegisterRedirect}\r\n                />\r\n                <LoginButton loginRedirectHandler={this.handleLoginRedirect} />\r\n                <PUSelect\r\n                  change_handler={this.changeLanguage}\r\n                  combobox_label=\"\"\r\n                  cb_min_width=\"80px\"\r\n                  select_options={[\r\n                    { id: 1, label: \"ENG\" },\r\n                    { id: 2, label: \"RUS\" },\r\n                  ]}\r\n                  cb_enabled={true}\r\n                  IconComponent={CBArrowDropDown}\r\n                />\r\n              </Toolbar>\r\n            </AppBar>\r\n          </ElevationScroll>\r\n          <Toolbar />\r\n          <Toolbar />\r\n          <Redirect push to=\"/\" />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withTranslation()(AppBarHome)"]},"metadata":{},"sourceType":"module"}