{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dno\\\\Desktop\\\\pu-web\\\\src\\\\components\\\\pages\\\\register\\\\Register.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PUCheckBoxDefault from \"../../checkboxes/PUCheckBoxDefault\";\nimport ResendSmsCodeButton from \"../../buttons/ResendSmsCodeButton\";\nimport { api_endpoint } from \"../../../settings\";\nimport FormBaseInput from \"components/form/FormBaseInput\";\nimport { registerPhoneNumber, checkRegistrationSmsCode } from \"./api\";\nimport NumberFormat from \"react-number-format\";\nimport startKyc from \"components/images/startkyc.png\";\nimport imgDeposit from \"components/images/img_deposit.png\";\nimport accountTypeBg from \"components/images/registration/accounttypebg.png\";\nimport personIcon from \"components/images/icons/personicon.png\";\nimport businessIcon from \"components/images/icons/businessicon.png\";\nimport freelanceIcon from \"components/images/icons/freelanceicon.png\";\nimport { Box, withStyles } from \"@material-ui/core\";\nimport PageLayout from \"../layout/PageLayout\";\n/*import SetPersonalData from \"./SetPersonalData\";*/\n\nimport axiosWithToken from \"utils/axiosWithToken\";\nimport OldStyleInput from \"components/common/OldStyleInput\";\nimport RoundedButton from \"components/common/RoundedButton\";\nconst wrapper = {\n  display: \"block\"\n};\nconst contentHolder = {\n  marginTop: \"10px\",\n  width: \"380px\"\n};\nconst contentHolderMarginTop = {\n  marginTop: \"100px\",\n  width: \"100%\",\n  margin: \"0 auto\",\n  textAlign: \"center\"\n};\nconst accountTypeHolder = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexDirection: \"row\"\n};\nconst headerStyle = {\n  color: \"#363636\",\n  textAlign: \"center\",\n  fontSize: \"24px\",\n  fontFamily: \"ProximaNovaSemibold, sans-serif\",\n  fontWeight: \"bold\",\n  marginTop: \"0px\",\n  marginBottom: \"35px\"\n};\nconst headerHintStyle = {\n  display: \"block\",\n  color: \"#787878\",\n  textAlign: \"center\",\n  fontSize: \"18px\",\n  fontFamily: \"ProximaNovaSemibold, sans-serif\",\n  marginBottom: \"50px\"\n};\nconst spacer = {\n  height: \"40px\",\n  width: \"100%\"\n};\nconst styles = {\n  accountType: {\n    minWidth: \"200px\",\n    maxWidth: \"200px\",\n    cursor: \"pointer\",\n    height: \"70px\",\n    border: \"1px solid #cccccc\",\n    borderRadius: 10,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n    textAlign: \"center\",\n    backgroundImage: `url(${accountTypeBg})`,\n    opacity: \"0.5\",\n    \"&:hover\": {// background: '#FF9B0F'\n    }\n  },\n  accountTypeIcon: {\n    marginRight: 10\n  },\n  accountTypeActive: {\n    opacity: 1\n  },\n  btnNext: {\n    height: 42,\n    borderRadius: 30,\n    textTransform: \"initial\",\n    \"& .MuiButton-endIcon\": {\n      marginLeft: 0\n    }\n  },\n  pageStageTitle: {\n    fontFamily: \"ProximaNovaSemibold\",\n    fontSize: 24,\n    color: \"#363636\",\n    textAlign: \"center\"\n  },\n  pageStageTitleDesc: {\n    fontFamily: \"ProximaNovaSemibold\",\n    fontSize: 18,\n    color: \"#787878\"\n  },\n  pageStageImg: {\n    maxWidth: \"500px\",\n    display: \"block\",\n    margin: \"0 auto\"\n  },\n  fieldLabel: {\n    display: \"block\",\n    color: \"#363636\",\n    marginBottom: 5,\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontFamily: \"ProximaNovaSemibold, sans-serif\",\n    opacity: \"0.8\"\n  }\n};\nconst REGISTER_STAGES = {\n  CHOOSE_ACCOUNT_TYPE: 4,\n  YOUR_PERSONAL_DATA: 5,\n  TOP_UP_ACCOUNT: 6,\n  START_KYC: 7\n};\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.goToKYC = () => {\n      // window.location.replace('/dashboard');\n      sessionStorage.setItem(\"goToKYC\", \"1\");\n      this.setState({\n        dashboard_redirect: true\n      });\n    };\n\n    this.accountTypeHandler = accType => {\n      this.setState({\n        accountType: accType\n      });\n      sessionStorage.setItem(\"account_type\", accType);\n    };\n\n    this.changeScreen = to => {\n      this.setState({\n        registerStage: to\n      });\n    };\n\n    this.handleLicenseAccept = () => {\n      this.setState({\n        licenseAccepted: !this.state.licenseAccepted\n      });\n    };\n\n    this.handleLoginRedirect = () => {\n      this.setState({\n        login_redirect: true\n      });\n    };\n\n    this.handleRegisterRedirect = () => {\n      this.setState({\n        register_redirect: true\n      });\n    };\n\n    this.topUpNotNowHandler = () => {\n      this.setState({\n        registerStage: 7\n      });\n    };\n\n    this.finishRegister = resp => {\n      if (this.state.accountType === \"1\") {\n        this.setState({\n          registerStage: 7\n        });\n      } else {\n        // templorary for demo purposes\n        // this.setState({registerStage: 6});\n        this.setState({\n          registerStage: 7\n        });\n      }\n    };\n\n    this.handleRegisterResponse = async () => {\n      this.setState({\n        inputPhoneNumError: null,\n        sendingSMS: true,\n        counter: 60\n      });\n      let phoneNum = `+${this.state.phoneNum.replace(/[^0-9]/g, \"\")}`;\n      const resp = await registerPhoneNumber(phoneNum);\n\n      if (resp.status === \"OK\") {\n        sessionStorage.setItem(\"user_id\", resp.response.user_id);\n        sessionStorage.setItem(\"phone_number\", resp.response.phone_number);\n        sessionStorage.setItem(\"id_sms_code\", resp.response.id_sms_code);\n        sessionStorage.setItem(\"token\", resp.response.token);\n        sessionStorage.setItem(\"key\", resp.response.key);\n        this.setState({\n          registerStage: 1\n        });\n        setTimeout(() => {\n          this.startCounter();\n        }, 100);\n      } else {\n        this.setState({\n          inputPhoneNumError: resp.message ? resp.message : \"Incorrect number\",\n          sendingSMS: false\n        }); //   if (resp.status === \"FAIL\") {\n        //     for (const error of resp.errors) {\n        //       alert(error.message);\n        //       //paint text field in red and show error hints\n        //     }\n        //   } else {\n        //     alert(\"Server error!\");\n        //   }\n      }\n    };\n\n    this.startCounter = () => {\n      let newCounter = this.state.counter - 1;\n\n      if (newCounter >= 0) {\n        setTimeout(() => {\n          this.setState({\n            counter: newCounter\n          });\n          this.startCounter();\n        }, 1000);\n      }\n    };\n\n    this.handleSmsCodeCheckResponse = async () => {\n      this.setState({\n        inputCodeCheckError: null,\n        checkingCode: true\n      });\n      const resp = await checkRegistrationSmsCode(this.state.registrationSmsCode);\n\n      if (resp.status === \"OK\") {\n        sessionStorage.setItem(\"token\", resp.response.token);\n        sessionStorage.setItem(\"key\", resp.response.key);\n        this.setState({\n          registerStage: 2\n        });\n      } else {\n        if (resp.status === \"FAIL\") {\n          sessionStorage.setItem(\"token\", resp.token);\n          sessionStorage.setItem(\"key\", resp.key);\n        }\n\n        this.setState({\n          inputCodeCheckError: resp.errors ? resp.errors[0].message : \"Incorrect SMS code!\",\n          checkingCode: false\n        });\n      }\n    };\n\n    this.setEmail = () => {\n      let setEmailData = {\n        id: sessionStorage.getItem(\"user_id\"),\n        email: this.state.email\n      };\n      axiosWithToken.post(api_endpoint + \"/set_email\", setEmailData).then(response => {\n        this.handleSetEmailResponse(response.data);\n      });\n    };\n\n    this.handleSetEmailResponse = resp => {\n      if (resp.status === \"OK\") {\n        this.setState({\n          registerStage: 4\n        });\n      } else {\n        if (resp.status === \"FAIL\") {\n          for (const error of resp.errors) {\n            alert(error.message); //paint text field in red and show error hints\n          }\n        } else {\n          alert(\"Server error!\");\n        }\n      }\n    };\n\n    this.validateField = (fName, fValue) => {\n      const validator = {\n        //phoneNum: () => /^\\+?\\d+$/.test(fValue),\n        registrationSmsCode: () => /^\\d{0,}$/.test(fValue)\n      };\n\n      if (!validator[fName]) {\n        return true;\n      }\n\n      return validator[fName]();\n    };\n\n    this.inputChangeHandler = e => {\n      if (e.target.value.length && !this.validateField(e.target.name, e.target.value)) {\n        return;\n      }\n\n      this.setState({ ...this.state,\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onInputChange = e => {\n      //let errorFieldName = `${e.target.name}Error`;\n      // if (this.state[errorFieldName]) {\n      //   updatedState[errorFieldName] = false;\n      // }\n      const updatedState = {\n        [e.target.name]: e.target.value\n      };\n      this.setState(updatedState);\n    };\n\n    this.setPassword = () => {\n      let setPasswordData = {\n        id: sessionStorage.getItem(\"user_id\"),\n        password: this.state.password\n      };\n      axiosWithToken.post(\"set_password\", setPasswordData).then(response => {\n        this.handleSetPasswordResponse(response.data);\n      });\n    };\n\n    this.handleSetPasswordResponse = resp => {\n      if (resp.status === \"OK\") {\n        this.setState({\n          registerStage: 3\n        });\n      } else {\n        if (resp.status === \"FAIL\") {\n          for (const error of resp.errors) {\n            alert(error.message); //paint text field in red and show error hints\n          }\n        } else {\n          alert(\"Server error!\");\n        }\n      }\n    };\n\n    this.state = {\n      registerStage: 0,\n      sms_code_check_redirect: false,\n      dashboard_redirect: false,\n      login_redirect: false,\n      register_redirect: false,\n      licenseAccepted: false,\n      accountType: \"\",\n      selectedCountry: null,\n      phoneNum: \"\",\n      registrationSmsCode: \"\",\n      sendingSMS: false,\n      checkingCode: false,\n      counter: 60\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props; // else if (\n    //   this.state.sms_code_check_redirect &&\n    //   !this.state.dashboard_redirect\n    // ) {\n    //   return <Redirect push to=\"/login_enter_sms_code\" />;\n    // } else if (\n    //   this.state.dashboard_redirect &&\n    //   !this.state.sms_code_check_redirect\n    // ) {\n    //   return <Redirect push to=\"/dashboard\" />;\n    // } else if (this.state.login_redirect) {\n    //   return <Redirect push to=\"/login\" />;\n    // }\n    // break;\n\n    switch (this.state.registerStage) {\n      case 0:\n        {\n          return React.createElement(PageLayout, {\n            style: wrapper,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 397\n            },\n            __self: this\n          }, React.createElement(Box, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            style: headerStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 399\n            },\n            __self: this\n          }, \"Get started with PAYSUNION in a few seconds.\", React.createElement(\"span\", {\n            style: headerHintStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 401\n            },\n            __self: this\n          }, \"We'll send you a message with a code to approve your phone.\")), React.createElement(\"div\", {\n            style: contentHolderMarginTop,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 405\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: classes.fieldLabel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 406\n            },\n            __self: this\n          }, \"Phone number\"), React.createElement(NumberFormat, {\n            onChange: this.inputChangeHandler,\n            value: this.state.phoneNum,\n            name: \"phoneNum\",\n            format: \"+# (###) ###-##-##\",\n            customInput: FormBaseInput,\n            error: this.state.inputPhoneNumError,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 407\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: spacer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 415\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 416\n            },\n            __self: this\n          }, React.createElement(PUCheckBoxDefault, {\n            label: \"I have read the terms of use of the service, privacy policy and I agree\",\n            changeHandler: this.handleLicenseAccept,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 417\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: spacer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 421\n            },\n            __self: this\n          }), React.createElement(RoundedButton, {\n            width: 180,\n            onClick: this.handleRegisterResponse,\n            disabled: !this.state.licenseAccepted || this.state.sendingSMS,\n            loading: this.state.sendingSMS,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 422\n            },\n            __self: this\n          }, \"Sign Up\")))));\n        }\n\n      case 1:\n        {\n          return React.createElement(PageLayout, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 441\n            },\n            __self: this\n          }, React.createElement(Box, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 442\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            style: headerStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 443\n            },\n            __self: this\n          }, \"Input SMS code\", React.createElement(\"span\", {\n            style: headerHintStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 445\n            },\n            __self: this\n          }, \"We send you a message with a code to approve your phone.\")), React.createElement(\"div\", {\n            style: contentHolderMarginTop,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 449\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: classes.fieldLabel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 450\n            },\n            __self: this\n          }, \"Input SMS code\"), React.createElement(FormBaseInput, {\n            value: this.state.registrationSmsCode,\n            onChange: this.inputChangeHandler,\n            name: \"registrationSmsCode\",\n            inputProps: {\n              maxLength: 10\n            },\n            error: this.state.inputCodeCheckError,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 451\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: spacer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 460\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 461\n            },\n            __self: this\n          }, React.createElement(RoundedButton // width={180}\n          , {\n            onClick: this.handleSmsCodeCheckResponse,\n            disabled: this.state.checkingCode,\n            loading: this.state.checkingCode,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 462\n            },\n            __self: this\n          }, \"Check SMS code\"), this.state.counter === 0 ? React.createElement(ResendSmsCodeButton, {\n            resendSMS: this.handleRegisterResponse,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 470\n            },\n            __self: this\n          }) : 'You can resend new code via ' + this.state.counter))));\n        }\n\n      case 2:\n        {\n          return React.createElement(PageLayout, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 481\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            style: contentHolderMarginTop,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 482\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            style: headerStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 483\n            },\n            __self: this\n          }, \"Set password\"), React.createElement(\"span\", {\n            className: classes.fieldLabel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 484\n            },\n            __self: this\n          }, \"Input password\"), React.createElement(OldStyleInput, {\n            type: \"password\",\n            name: \"password\",\n            onChange: this.onInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 485\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 490\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: classes.fieldLabel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 491\n            },\n            __self: this\n          }, \"Repeat password\"), React.createElement(OldStyleInput, {\n            type: \"password\",\n            name: \"password_repeat\",\n            onChange: this.onInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 492\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: spacer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 497\n            },\n            __self: this\n          }), React.createElement(RoundedButton // width={180}\n          , {\n            onClick: this.setPassword // disabled={this.state.checkingCode}\n            // loading={this.state.checkingCode}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 498\n            },\n            __self: this\n          }, \"Set password\")));\n        }\n\n      case 3:\n        {\n          return React.createElement(PageLayout, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 513\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            style: contentHolderMarginTop,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 514\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            style: headerStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 515\n            },\n            __self: this\n          }, \"Input email\"), React.createElement(OldStyleInput, {\n            type: \"text\",\n            name: \"email\",\n            onChange: this.onInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 516\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: spacer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 521\n            },\n            __self: this\n          }), React.createElement(RoundedButton // width={180}\n          , {\n            onClick: this.setEmail // disabled={this.state.checkingCode}\n            // loading={this.state.checkingCode}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 523\n            },\n            __self: this\n          }, \"Save email\")));\n        }\n\n      case REGISTER_STAGES.CHOOSE_ACCOUNT_TYPE:\n        {\n          return React.createElement(PageLayout, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 538\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            style: contentHolderMarginTop,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 539\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            style: headerStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 540\n            },\n            __self: this\n          }, \"Choose your account type\"), React.createElement(\"div\", {\n            style: accountTypeHolder,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 541\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: `${classes.accountType} ${this.state.accountType === 1 ? classes.accountTypeActive : \"\"}`,\n            onClick: () => this.accountTypeHandler(1),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 542\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            alt: \"\",\n            src: personIcon,\n            className: classes.accountTypeIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 550\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 551\n            },\n            __self: this\n          }, \"Personal\")), React.createElement(\"div\", {\n            className: `${classes.accountType} ${this.state.accountType === 2 ? classes.accountTypeActive : \"\"}`,\n            onClick: () => this.accountTypeHandler(2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 553\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            alt: \"\",\n            src: businessIcon,\n            className: classes.accountTypeIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 561\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 562\n            },\n            __self: this\n          }, \"Business\")), React.createElement(\"div\", {\n            className: `${classes.accountType} ${this.state.accountType === 3 ? classes.accountTypeActive : \"\"}`,\n            onClick: () => this.accountTypeHandler(3),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 564\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            alt: \"\",\n            src: freelanceIcon,\n            className: classes.accountTypeIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 572\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 577\n            },\n            __self: this\n          }, \"Freelance\"))), React.createElement(Box, {\n            mt: 2,\n            display: \"flex\",\n            justifyContent: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 580\n            },\n            __self: this\n          }, React.createElement(RoundedButton // width={180}\n          , {\n            onClick: () => this.changeScreen(REGISTER_STAGES.YOUR_PERSONAL_DATA) // disabled={this.state.checkingCode}\n            // loading={this.state.checkingCode}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 581\n            },\n            __self: this\n          }, \"Set account type\")), React.createElement(\"div\", {\n            style: spacer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 592\n            },\n            __self: this\n          })));\n        }\n\n      /*      case REGISTER_STAGES.YOUR_PERSONAL_DATA: {\r\n              return (\r\n                <PageLayout>\r\n                  <div style={contentHolder}>\r\n                    <p style={headerStyle}>Your personal data</p>\r\n                    <SetPersonalData finishRegister={this.finishRegister} />\r\n                  </div>\r\n                </PageLayout>\r\n              );\r\n            }*/\n\n      case REGISTER_STAGES.TOP_UP_ACCOUNT:\n        {\n          return React.createElement(PageLayout, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 611\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 612\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            alt: \"\",\n            src: imgDeposit,\n            className: classes.pageStageImg,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 613\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: classes.pageStageTitle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 614\n            },\n            __self: this\n          }, \"Top up your account for 10 EUR or more\"), React.createElement(\"p\", {\n            className: classes.pageStageTitleDesc,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 617\n            },\n            __self: this\n          }, \"To activate your account you need to top up it. You'll be able to spend or withdraw this money.\"), React.createElement(\"div\", {\n            style: spacer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 622\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: accountTypeHolder,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 624\n            },\n            __self: this\n          }, React.createElement(RoundedButton, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 625\n            },\n            __self: this\n          }, \"Not now\"), React.createElement(RoundedButton, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 626\n            },\n            __self: this\n          }, \"Top up\"))));\n        }\n\n      case REGISTER_STAGES.START_KYC:\n        {\n          return React.createElement(PageLayout, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 635\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 636\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            alt: \"\",\n            src: startKyc,\n            className: classes.pageStageImg,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 637\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: classes.pageStageTitle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 638\n            },\n            __self: this\n          }, \"To activate your account, let's quickly confirm that you are really \", sessionStorage.getItem(\"fistName\")), React.createElement(\"div\", {\n            style: spacer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 642\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: accountTypeHolder,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 643\n            },\n            __self: this\n          }, React.createElement(RoundedButton, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 644\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/dashboard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 645\n            },\n            __self: this\n          }, \"Not now\")), React.createElement(RoundedButton, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 647\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: {\n              pathname: \"/dashboard/kyc\",\n              state: {\n                accountType: this.state.accountType\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 648\n            },\n            __self: this\n          }, \"Verify identity\")))));\n        }\n\n      default:\n        {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 663\n            },\n            __self: this\n          });\n        }\n    }\n  }\n\n}\n\nexport default withStyles(styles)(Register);","map":{"version":3,"sources":["C:/Users/Dno/Desktop/pu-web/src/components/pages/register/Register.js"],"names":["React","Link","PUCheckBoxDefault","ResendSmsCodeButton","api_endpoint","FormBaseInput","registerPhoneNumber","checkRegistrationSmsCode","NumberFormat","startKyc","imgDeposit","accountTypeBg","personIcon","businessIcon","freelanceIcon","Box","withStyles","PageLayout","axiosWithToken","OldStyleInput","RoundedButton","wrapper","display","contentHolder","marginTop","width","contentHolderMarginTop","margin","textAlign","accountTypeHolder","justifyContent","flexDirection","headerStyle","color","fontSize","fontFamily","fontWeight","marginBottom","headerHintStyle","spacer","height","styles","accountType","minWidth","maxWidth","cursor","border","borderRadius","alignItems","marginLeft","marginRight","backgroundImage","opacity","accountTypeIcon","accountTypeActive","btnNext","textTransform","pageStageTitle","pageStageTitleDesc","pageStageImg","fieldLabel","REGISTER_STAGES","CHOOSE_ACCOUNT_TYPE","YOUR_PERSONAL_DATA","TOP_UP_ACCOUNT","START_KYC","Register","Component","constructor","props","goToKYC","sessionStorage","setItem","setState","dashboard_redirect","accountTypeHandler","accType","changeScreen","to","registerStage","handleLicenseAccept","licenseAccepted","state","handleLoginRedirect","login_redirect","handleRegisterRedirect","register_redirect","topUpNotNowHandler","finishRegister","resp","handleRegisterResponse","inputPhoneNumError","sendingSMS","counter","phoneNum","replace","status","response","user_id","phone_number","id_sms_code","token","key","setTimeout","startCounter","message","newCounter","handleSmsCodeCheckResponse","inputCodeCheckError","checkingCode","registrationSmsCode","errors","setEmail","setEmailData","id","getItem","email","post","then","handleSetEmailResponse","data","error","alert","validateField","fName","fValue","validator","test","inputChangeHandler","e","target","value","length","name","onInputChange","updatedState","setPassword","setPasswordData","password","handleSetPasswordResponse","sms_code_check_redirect","selectedCountry","render","classes","maxLength","pathname"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PUCheckBoxDefault from \"../../checkboxes/PUCheckBoxDefault\";\r\nimport ResendSmsCodeButton from \"../../buttons/ResendSmsCodeButton\";\r\nimport { api_endpoint } from \"../../../settings\";\r\n\r\nimport FormBaseInput from \"components/form/FormBaseInput\";\r\nimport { registerPhoneNumber, checkRegistrationSmsCode } from \"./api\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport startKyc from \"components/images/startkyc.png\";\r\nimport imgDeposit from \"components/images/img_deposit.png\";\r\nimport accountTypeBg from \"components/images/registration/accounttypebg.png\";\r\nimport personIcon from \"components/images/icons/personicon.png\";\r\nimport businessIcon from \"components/images/icons/businessicon.png\";\r\nimport freelanceIcon from \"components/images/icons/freelanceicon.png\";\r\n\r\nimport { Box, withStyles } from \"@material-ui/core\";\r\nimport PageLayout from \"../layout/PageLayout\";\r\n/*import SetPersonalData from \"./SetPersonalData\";*/\r\n\r\nimport axiosWithToken from \"utils/axiosWithToken\";\r\nimport OldStyleInput from \"components/common/OldStyleInput\";\r\nimport RoundedButton from \"components/common/RoundedButton\";\r\n\r\nconst wrapper = {\r\n  display: \"block\",\r\n}\r\n\r\nconst contentHolder = {\r\n  marginTop: \"10px\",\r\n  width: \"380px\",\r\n};\r\n\r\nconst contentHolderMarginTop = {\r\n  marginTop: \"100px\",\r\n  width: \"100%\",\r\n  margin: \"0 auto\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nconst accountTypeHolder = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  flexDirection: \"row\",\r\n};\r\n\r\nconst headerStyle = {\r\n  color: \"#363636\",\r\n  textAlign: \"center\",\r\n  fontSize: \"24px\",\r\n  fontFamily: \"ProximaNovaSemibold, sans-serif\",\r\n  fontWeight: \"bold\",\r\n  marginTop: \"0px\",\r\n  marginBottom: \"35px\",\r\n};\r\n\r\nconst headerHintStyle = {\r\n  display: \"block\",\r\n  color: \"#787878\",\r\n  textAlign: \"center\",\r\n  fontSize: \"18px\",\r\n  fontFamily: \"ProximaNovaSemibold, sans-serif\",\r\n  marginBottom: \"50px\",\r\n};\r\n\r\nconst spacer = {\r\n  height: \"40px\",\r\n  width: \"100%\",\r\n};\r\n\r\nconst styles = {\r\n  accountType: {\r\n    minWidth: \"200px\",\r\n    maxWidth: \"200px\",\r\n    cursor: \"pointer\",\r\n    height: \"70px\",\r\n    border: \"1px solid #cccccc\",\r\n    borderRadius: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    marginLeft: \"10px\",\r\n    marginRight: \"10px\",\r\n    textAlign: \"center\",\r\n    backgroundImage: `url(${accountTypeBg})`,\r\n    opacity: \"0.5\",\r\n    \"&:hover\": {\r\n      // background: '#FF9B0F'\r\n    },\r\n  },\r\n  accountTypeIcon: {\r\n    marginRight: 10,\r\n  },\r\n  accountTypeActive: {\r\n    opacity: 1,\r\n  },\r\n  btnNext: {\r\n    height: 42,\r\n    borderRadius: 30,\r\n    textTransform: \"initial\",\r\n    \"& .MuiButton-endIcon\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  pageStageTitle: {\r\n    fontFamily: \"ProximaNovaSemibold\",\r\n    fontSize: 24,\r\n    color: \"#363636\",\r\n    textAlign: \"center\",\r\n  },\r\n  pageStageTitleDesc: {\r\n    fontFamily: \"ProximaNovaSemibold\",\r\n    fontSize: 18,\r\n    color: \"#787878\",\r\n  },\r\n  pageStageImg: {\r\n    maxWidth: \"500px\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n  },\r\n  fieldLabel: {\r\n    display: \"block\",\r\n    color: \"#363636\",\r\n    marginBottom: 5,\r\n    textAlign: \"center\",\r\n    fontSize: \"16px\",\r\n    fontFamily: \"ProximaNovaSemibold, sans-serif\",\r\n    opacity: \"0.8\",\r\n  },\r\n};\r\n\r\nconst REGISTER_STAGES = {\r\n  CHOOSE_ACCOUNT_TYPE: 4,\r\n  YOUR_PERSONAL_DATA: 5,\r\n  TOP_UP_ACCOUNT: 6,\r\n  START_KYC: 7,\r\n};\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      registerStage: 0,\r\n      sms_code_check_redirect: false,\r\n      dashboard_redirect: false,\r\n      login_redirect: false,\r\n      register_redirect: false,\r\n      licenseAccepted: false,\r\n      accountType: \"\",\r\n      selectedCountry: null,\r\n      phoneNum: \"\",\r\n      registrationSmsCode: \"\",\r\n      sendingSMS: false,\r\n      checkingCode: false,\r\n      counter: 60,\r\n    };\r\n  }\r\n\r\n  goToKYC = () => {\r\n    // window.location.replace('/dashboard');\r\n    sessionStorage.setItem(\"goToKYC\", \"1\");\r\n    this.setState({ dashboard_redirect: true });\r\n  };\r\n\r\n  accountTypeHandler = (accType) => {\r\n    this.setState({\r\n      accountType: accType,\r\n    });\r\n    sessionStorage.setItem(\"account_type\", accType);\r\n  };\r\n\r\n  changeScreen = (to) => {\r\n    this.setState({\r\n      registerStage: to,\r\n    });\r\n  };\r\n\r\n  handleLicenseAccept = () => {\r\n    this.setState({ licenseAccepted: !this.state.licenseAccepted });\r\n  };\r\n\r\n  handleLoginRedirect = () => {\r\n    this.setState({ login_redirect: true });\r\n  };\r\n\r\n  handleRegisterRedirect = () => {\r\n    this.setState({ register_redirect: true });\r\n  };\r\n\r\n  topUpNotNowHandler = () => {\r\n    this.setState({ registerStage: 7 });\r\n  };\r\n\r\n  finishRegister = (resp) => {\r\n    if (this.state.accountType === \"1\") {\r\n      this.setState({ registerStage: 7 });\r\n    } else {\r\n      // templorary for demo purposes\r\n      // this.setState({registerStage: 6});\r\n      this.setState({ registerStage: 7 });\r\n    }\r\n  };\r\n\r\n  handleRegisterResponse = async () => {\r\n    this.setState({\r\n      inputPhoneNumError: null,\r\n      sendingSMS: true,\r\n      counter: 60,\r\n    });\r\n\r\n\r\n    let phoneNum = `+${this.state.phoneNum.replace(/[^0-9]/g, \"\")}`;\r\n    const resp = await registerPhoneNumber(phoneNum);\r\n    if (resp.status === \"OK\") {\r\n      sessionStorage.setItem(\"user_id\", resp.response.user_id);\r\n      sessionStorage.setItem(\"phone_number\", resp.response.phone_number);\r\n      sessionStorage.setItem(\"id_sms_code\", resp.response.id_sms_code);\r\n      sessionStorage.setItem(\"token\", resp.response.token);\r\n      sessionStorage.setItem(\"key\", resp.response.key);\r\n      this.setState({ registerStage: 1 });\r\n      setTimeout(()=>{\r\n        this.startCounter()\r\n      }, 100)\r\n    } else {\r\n      this.setState({\r\n        inputPhoneNumError: resp.message ? resp.message : \"Incorrect number\",\r\n        sendingSMS: false,\r\n      });\r\n\r\n      //   if (resp.status === \"FAIL\") {\r\n      //     for (const error of resp.errors) {\r\n      //       alert(error.message);\r\n      //       //paint text field in red and show error hints\r\n      //     }\r\n      //   } else {\r\n      //     alert(\"Server error!\");\r\n      //   }\r\n    }\r\n  };\r\n\r\n  startCounter = () => {\r\n    let newCounter = this.state.counter-1;\r\n\r\n    if(newCounter >= 0) {\r\n      setTimeout(()=>{\r\n        this.setState({\r\n          counter: newCounter,\r\n        });\r\n        this.startCounter()\r\n      }, 1000)\r\n    }\r\n\r\n  }\r\n\r\n  handleSmsCodeCheckResponse = async () => {\r\n    this.setState({\r\n      inputCodeCheckError: null,\r\n      checkingCode: true,\r\n\r\n    });\r\n    const resp = await checkRegistrationSmsCode(this.state.registrationSmsCode);\r\n    if (resp.status === \"OK\") {\r\n      sessionStorage.setItem(\"token\", resp.response.token);\r\n      sessionStorage.setItem(\"key\", resp.response.key);\r\n      this.setState({ registerStage: 2 });\r\n    } else {\r\n      if (resp.status === \"FAIL\") {\r\n        sessionStorage.setItem(\"token\", resp.token);\r\n        sessionStorage.setItem(\"key\", resp.key);\r\n      }\r\n      this.setState({\r\n        inputCodeCheckError: resp.errors\r\n          ? resp.errors[0].message\r\n          : \"Incorrect SMS code!\",\r\n        checkingCode: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setEmail = () => {\r\n    let setEmailData = {\r\n      id: sessionStorage.getItem(\"user_id\"),\r\n      email: this.state.email,\r\n    };\r\n\r\n    axiosWithToken\r\n      .post(api_endpoint + \"/set_email\", setEmailData)\r\n      .then((response) => {\r\n        this.handleSetEmailResponse(response.data);\r\n      });\r\n  };\r\n\r\n  handleSetEmailResponse = (resp) => {\r\n    if (resp.status === \"OK\") {\r\n      this.setState({ registerStage: 4 });\r\n    } else {\r\n      if (resp.status === \"FAIL\") {\r\n        for (const error of resp.errors) {\r\n          alert(error.message);\r\n          //paint text field in red and show error hints\r\n        }\r\n      } else {\r\n        alert(\"Server error!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  validateField = (fName, fValue) => {\r\n    const validator = {\r\n      //phoneNum: () => /^\\+?\\d+$/.test(fValue),\r\n      registrationSmsCode: () => /^\\d{0,}$/.test(fValue),\r\n    };\r\n\r\n    if (!validator[fName]) {\r\n      return true;\r\n    }\r\n    return validator[fName]();\r\n  };\r\n\r\n  inputChangeHandler = (e) => {\r\n    if (\r\n      e.target.value.length &&\r\n      !this.validateField(e.target.name, e.target.value)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onInputChange = (e) => {\r\n    //let errorFieldName = `${e.target.name}Error`;\r\n\r\n    // if (this.state[errorFieldName]) {\r\n    //   updatedState[errorFieldName] = false;\r\n    // }\r\n\r\n    const updatedState = {\r\n      [e.target.name]: e.target.value,\r\n    };\r\n\r\n    this.setState(updatedState);\r\n  };\r\n\r\n  setPassword = () => {\r\n    let setPasswordData = {\r\n      id: sessionStorage.getItem(\"user_id\"),\r\n      password: this.state.password,\r\n    };\r\n\r\n    axiosWithToken.post(\"set_password\", setPasswordData).then((response) => {\r\n      this.handleSetPasswordResponse(response.data);\r\n    });\r\n  };\r\n\r\n  handleSetPasswordResponse = (resp) => {\r\n    if (resp.status === \"OK\") {\r\n      this.setState({ registerStage: 3 });\r\n    } else {\r\n      if (resp.status === \"FAIL\") {\r\n        for (const error of resp.errors) {\r\n          alert(error.message);\r\n          //paint text field in red and show error hints\r\n        }\r\n      } else {\r\n        alert(\"Server error!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    // else if (\r\n    //   this.state.sms_code_check_redirect &&\r\n    //   !this.state.dashboard_redirect\r\n    // ) {\r\n    //   return <Redirect push to=\"/login_enter_sms_code\" />;\r\n    // } else if (\r\n    //   this.state.dashboard_redirect &&\r\n    //   !this.state.sms_code_check_redirect\r\n    // ) {\r\n    //   return <Redirect push to=\"/dashboard\" />;\r\n    // } else if (this.state.login_redirect) {\r\n    //   return <Redirect push to=\"/login\" />;\r\n    // }\r\n    // break;\r\n\r\n    switch (this.state.registerStage) {\r\n      case 0: {\r\n        return (\r\n          <PageLayout style={wrapper}>\r\n            <Box>\r\n              <p style={headerStyle}>\r\n                Get started with PAYSUNION in a few seconds.\r\n                <span style={headerHintStyle}>\r\n                  We'll send you a message with a code to approve your phone.\r\n                </span>\r\n              </p>\r\n              <div style={contentHolderMarginTop}>\r\n                <span className={classes.fieldLabel}>Phone number</span>\r\n                <NumberFormat\r\n                  onChange={this.inputChangeHandler}\r\n                  value={this.state.phoneNum}\r\n                  name=\"phoneNum\"\r\n                  format=\"+# (###) ###-##-##\"\r\n                  customInput={FormBaseInput}\r\n                  error={this.state.inputPhoneNumError}\r\n                />\r\n                <div style={spacer} />\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <PUCheckBoxDefault\r\n                    label=\"I have read the terms of use of the service, privacy policy and I agree\"\r\n                    changeHandler={this.handleLicenseAccept}\r\n                  />\r\n                  <div style={spacer} />\r\n                  <RoundedButton\r\n                    width={180}\r\n                    onClick={this.handleRegisterResponse}\r\n                    disabled={\r\n                      !this.state.licenseAccepted || this.state.sendingSMS\r\n                    }\r\n                    loading={this.state.sendingSMS}\r\n                  >\r\n                    Sign Up\r\n                  </RoundedButton>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n          </PageLayout>\r\n        );\r\n      }\r\n\r\n      case 1: {\r\n        return (\r\n          <PageLayout>\r\n            <Box>\r\n              <p style={headerStyle}>\r\n                Input SMS code\r\n                <span style={headerHintStyle}>\r\n                  We send you a message with a code to approve your phone.\r\n                </span>\r\n              </p>\r\n              <div style={contentHolderMarginTop}>\r\n                <span className={classes.fieldLabel}>Input SMS code</span>\r\n                <FormBaseInput\r\n                  value={this.state.registrationSmsCode}\r\n                  onChange={this.inputChangeHandler}\r\n                  name=\"registrationSmsCode\"\r\n                  inputProps={{\r\n                    maxLength: 10,\r\n                  }}\r\n                  error={this.state.inputCodeCheckError}\r\n                />\r\n                <div style={spacer} />\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <RoundedButton\r\n                    // width={180}\r\n                    onClick={this.handleSmsCodeCheckResponse}\r\n                    disabled={this.state.checkingCode}\r\n                    loading={this.state.checkingCode}\r\n                  >\r\n                    Check SMS code\r\n                  </RoundedButton>\r\n                  {this.state.counter===0 ? <ResendSmsCodeButton resendSMS={this.handleRegisterResponse} /> : 'You can resend new code via '+this.state.counter}\r\n\r\n                </div>\r\n              </div>\r\n            </Box>\r\n          </PageLayout>\r\n        );\r\n      }\r\n\r\n      case 2: {\r\n        return (\r\n          <PageLayout>\r\n            <div style={contentHolderMarginTop}>\r\n              <p style={headerStyle}>Set password</p>\r\n              <span className={classes.fieldLabel}>Input password</span>\r\n              <OldStyleInput\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={this.onInputChange}\r\n              />\r\n              <br />\r\n              <span className={classes.fieldLabel}>Repeat password</span>\r\n              <OldStyleInput\r\n                type=\"password\"\r\n                name=\"password_repeat\"\r\n                onChange={this.onInputChange}\r\n              />\r\n              <div style={spacer} />\r\n              <RoundedButton\r\n                // width={180}\r\n                onClick={this.setPassword}\r\n                // disabled={this.state.checkingCode}\r\n                // loading={this.state.checkingCode}\r\n              >\r\n                Set password\r\n              </RoundedButton>\r\n            </div>\r\n          </PageLayout>\r\n        );\r\n      }\r\n\r\n      case 3: {\r\n        return (\r\n          <PageLayout>\r\n            <div style={contentHolderMarginTop}>\r\n              <p style={headerStyle}>Input email</p>\r\n              <OldStyleInput\r\n                type=\"text\"\r\n                name=\"email\"\r\n                onChange={this.onInputChange}\r\n              />\r\n              <div style={spacer} />\r\n\r\n              <RoundedButton\r\n                // width={180}\r\n                onClick={this.setEmail}\r\n                // disabled={this.state.checkingCode}\r\n                // loading={this.state.checkingCode}\r\n              >\r\n                Save email\r\n              </RoundedButton>\r\n            </div>\r\n          </PageLayout>\r\n        );\r\n      }\r\n\r\n      case REGISTER_STAGES.CHOOSE_ACCOUNT_TYPE: {\r\n        return (\r\n          <PageLayout>\r\n            <div style={contentHolderMarginTop}>\r\n              <p style={headerStyle}>Choose your account type</p>\r\n              <div style={accountTypeHolder}>\r\n                <div\r\n                  className={`${classes.accountType} ${\r\n                    this.state.accountType === 1\r\n                      ? classes.accountTypeActive\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => this.accountTypeHandler(1)}\r\n                >\r\n                  <img alt=\"\" src={personIcon} className={classes.accountTypeIcon} />\r\n                  <span>Personal</span>\r\n                </div>\r\n                <div\r\n                  className={`${classes.accountType} ${\r\n                    this.state.accountType === 2\r\n                      ? classes.accountTypeActive\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => this.accountTypeHandler(2)}\r\n                >\r\n                  <img alt=\"\" src={businessIcon} className={classes.accountTypeIcon} />\r\n                  <span>Business</span>\r\n                </div>\r\n                <div\r\n                  className={`${classes.accountType} ${\r\n                    this.state.accountType === 3\r\n                      ? classes.accountTypeActive\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => this.accountTypeHandler(3)}\r\n                >\r\n                  <img\r\n                    alt=\"\"\r\n                    src={freelanceIcon}\r\n                    className={classes.accountTypeIcon}\r\n                  />\r\n                  <span>Freelance</span>\r\n                </div>\r\n              </div>\r\n              <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n                <RoundedButton\r\n                  // width={180}\r\n                  onClick={() =>\r\n                    this.changeScreen(REGISTER_STAGES.YOUR_PERSONAL_DATA)\r\n                  }\r\n                  // disabled={this.state.checkingCode}\r\n                  // loading={this.state.checkingCode}\r\n                >\r\n                  Set account type\r\n                </RoundedButton>\r\n              </Box>\r\n              <div style={spacer} />\r\n            </div>\r\n          </PageLayout>\r\n        );\r\n      }\r\n\r\n/*      case REGISTER_STAGES.YOUR_PERSONAL_DATA: {\r\n        return (\r\n          <PageLayout>\r\n            <div style={contentHolder}>\r\n              <p style={headerStyle}>Your personal data</p>\r\n              <SetPersonalData finishRegister={this.finishRegister} />\r\n            </div>\r\n          </PageLayout>\r\n        );\r\n      }*/\r\n\r\n      case REGISTER_STAGES.TOP_UP_ACCOUNT: {\r\n        return (\r\n          <PageLayout>\r\n            <div>\r\n              <img alt=\"\" src={imgDeposit} className={classes.pageStageImg} />\r\n              <p className={classes.pageStageTitle}>\r\n                Top up your account for 10 EUR or more\r\n              </p>\r\n              <p className={classes.pageStageTitleDesc}>\r\n                To activate your account you need to top up it. You'll be able\r\n                to spend or withdraw this money.\r\n              </p>\r\n\r\n              <div style={spacer} />\r\n\r\n              <div style={accountTypeHolder}>\r\n                <RoundedButton>Not now</RoundedButton>\r\n                <RoundedButton>Top up</RoundedButton>\r\n              </div>\r\n            </div>\r\n          </PageLayout>\r\n        );\r\n      }\r\n\r\n      case REGISTER_STAGES.START_KYC: {\r\n        return (\r\n          <PageLayout>\r\n            <div>\r\n              <img alt=\"\" src={startKyc} className={classes.pageStageImg} />\r\n              <p className={classes.pageStageTitle}>\r\n                To activate your account, let's quickly confirm that you are\r\n                really {sessionStorage.getItem(\"fistName\")}\r\n              </p>\r\n              <div style={spacer} />\r\n              <div style={accountTypeHolder}>\r\n                <RoundedButton>\r\n                  <Link to=\"/dashboard\">Not now</Link>\r\n                </RoundedButton>\r\n                <RoundedButton>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/dashboard/kyc\",\r\n                      state: { accountType: this.state.accountType },\r\n                    }}\r\n                  >\r\n                    Verify identity\r\n                  </Link>\r\n                </RoundedButton>\r\n              </div>\r\n            </div>\r\n          </PageLayout>\r\n        );\r\n      }\r\n      default: {\r\n        return <div />;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Register);\r\n"]},"metadata":{},"sourceType":"module"}